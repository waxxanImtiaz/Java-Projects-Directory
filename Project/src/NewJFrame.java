/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Hameed
 */
import java.io.BufferedReader;
 import javax.swing.JFileChooser;
 import java.io.File;  
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Scanner;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFrame;
import javax.swing.JTextField;
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jButton1 = new javax.swing.JButton();
        jFileChooser1 = new javax.swing.JFileChooser();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(0, 0, 255));
        setForeground(new java.awt.Color(204, 204, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("Browse File");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 20, 101, -1));
        getContentPane().add(jFileChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 684, 247, 0));
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 264, -1));

        jButton2.setText("Scanner");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 70, 99, 35));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 340, 700));

        jPanel1.setBackground(new java.awt.Color(102, 102, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 570, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 820, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -20, 570, 820));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            JFrame parentFrame = new JFrame();
 
JFileChooser fileChooser = new JFileChooser();
fileChooser.setDialogTitle("Specify a file to save");   
 
int userSelection = fileChooser.showSaveDialog(parentFrame);
 
if (userSelection == JFileChooser.APPROVE_OPTION) {
    File fileToSave = fileChooser.getSelectedFile();
    System.out.println("Save as file: " + fileToSave.getAbsolutePath());
    jTextField1.setText(fileToSave.getName());
}

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       
        try {                                         
            FileReader fin = null;
            try {
                fin = new FileReader(jTextField1.getText());
            } catch (FileNotFoundException ex) {
                
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
             String line = null;
            BufferedReader br= new BufferedReader(fin);
                
                
                int caret=jTextArea1.getCaretPosition();
  while ((line = br.readLine()) != null) {
                                    
            StringTokenizer st = new StringTokenizer(line, "[ =-+++--';().*{}[],!@#$%^&/]", true);
              while(st.hasMoreTokens()){
                  
                      String s= st.nextToken();
                     
                      
                       
                  
                      switch(s){ 
                          
                      case "++":
                  jTextArea1.insert("++"+" "+":Unary Operator "+"\n",caret);
                              break;
                              case "--":
                  jTextArea1.insert("--"+" "+":Unary Operator "+"\n",caret);
                                  break;
                                  case "!":
                  jTextArea1.insert("!"+" "+":Unary Operator "+"\n",caret);
                                      break;
                                      case "+":
                  jTextArea1.insert("+"+" "+":Airthmatic Operator "+"\n",caret);
                                          break;
                                    case "-":
                  jTextArea1.insert("-"+" "+":Airthmatic Operator "+"\n",caret);
                                        break;
                                        case "*":
                  jTextArea1.insert("*"+" "+":Airthmatic Operator "+"\n",caret);
                                          break;
                                    case "/":
                  jTextArea1.insert("/"+" "+":Airthmatic Operator "+"\n",caret);
                                        break;
                                        case "%":
                  jTextArea1.insert("%"+" "+":Airthmatic Operator "+"\n",caret);
                                        break;
                                            case "<<":
                  jTextArea1.insert("<<"+" "+":Rational Operator "+"\n",caret);
                                          break;
                                    case ">>":
                  jTextArea1.insert(">>"+" "+":Rational Operator "+"\n",caret);
                                        break;
                                       
                                            case "=":
                  jTextArea1.insert("="+" "+":Rational Operator "+"\n",caret);
                                          break;
                                    case "(":
                  jTextArea1.insert("("+" "+":Symbol "+"\n",caret);
                                        break;
                                        case "&":
                  jTextArea1.insert("&"+" "+":Conditional Operator "+"\n",caret);
                                        break;
                                        case "|":
                  jTextArea1.insert("|"+" "+":Conditional Operator "+"\n",caret);
                                        break;
                                            case ")":
                  jTextArea1.insert(")"+" "+":Symbol "+"\n",caret);
                                                break;
                                                case "{":
                  jTextArea1.insert("{"+" "+":Symbol "+"\n",caret);
                                                    break;
                                                    case "}":
                  jTextArea1.insert("}"+" "+":Symbol "+"\n",caret);
                                                        break;
                                                case "[":
                  jTextArea1.insert("["+" "+":Symbol "+"\n",caret);
                                                    break;
                                                    case "]":
                  jTextArea1.insert("]"+" "+":Symbol "+"\n",caret);
                                                        break;
                                                        case ".":
                  jTextArea1.insert("."+" "+":Symbol "+"\n",caret);
                                                    break;
                                                    case ",":
                  jTextArea1.insert(","+" "+":Symbol "+"\n",caret);
                                                        break;
                                                        case ";":
                  jTextArea1.insert(";"+" "+":Symbol "+"\n",caret);
                                                    break;
                                                    case ":":
                  jTextArea1.insert(":"+" "+":Symbol "+"\n",caret);
                                                        break;
                                                        case "'":
                  jTextArea1.insert("'"+" "+":Symbol "+"\n",caret);
                                                    break;
                                                            case "if":
                  jTextArea1.insert("if"+" "+":keyword "+"\n",caret);
                                                    break;
                                                                 case "else":
                  jTextArea1.insert("else"+" "+":keyword "+"\n",caret);
                                                    break;
                                                                      case "elseif":
                  jTextArea1.insert("elseif"+" "+":keyword "+"\n",caret);
                                                    break;
                                                                           case "while":
                  jTextArea1.insert("while"+" "+":keyword "+"\n",caret);
                                                    break;
                                                                                case "do while":
                  jTextArea1.insert("do while"+" "+":keyword "+"\n",caret);
                                                    break;
                                                                                     case "for":
                  jTextArea1.insert("for"+" "+":keyword "+"\n",caret);
                                                    break;
                                                    
                                           
                                   default: 
                                       if (!s.trim().isEmpty()){
                                       
                                       
                                      
                                           
                                                    
                                       
                                       jTextArea1.insert(s+" "+" "+"Identifier"+"\n", caret);
                                       
                                       
                                     break;
                                       }
                                       
                                      
                                      
                      
                      }
                      
                      
              
                        
                  }
              
                      
                
                
                                                    
                
            }
        } catch (IOException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
       
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
